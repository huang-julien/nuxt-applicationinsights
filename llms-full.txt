# Introduction

Applicationinsights can be hard to implement within SSR frameworks where multiple SDK exist for different environnment.

This modules provides an integration of applicationinsights server side with \[nitro-applicationinsights]\(<https://github.com/huang-julien/nitro-applicationinsights>{rel="nofollow"}) and a client-side plugin to load \[applicationinsights web]\(<https://www.npmjs.com/package/@microsoft/applicationinsights-web>{rel="nofollow"}).

\`nuxt-applicationinsights\` is only compatible with node for the`server-side integration.`


# Installation

## Quick Start

### Installation

```bash
npx nuxi module add nuxt-applicationinsights
```

This command installs and adds \`nuxt-applicationinsights\` to your \`nuxt.config.ts\`


# Usage

## \`nuxt.config.ts\`

**connectionString**

- type: **string**

Your applicationinsights connection string. Can be overriden by the runtime config if you need to have a different value for the client or server instance.

**serverEnabled**

- type: **boolean**
- default: **true**

Enable \`nitro-applicationinsights\`, adding the server instance of \`applicationinsights\` to each server request and to each nuxt instance.

**clientEnabled**

- type: **boolean**
- default: **true**

Add a client-side plugin to initialize the ApplicationInsights instance and provide it to your nuxt instance.

## \`nitro-applicationinsights\`

See [nitro-applicationinsights runtime config documentation](https://nitro-applicationinsights.julien-huang.dev/guide/runtime-configuration){rel="nofollow"}

## \`nitro-opentelemetry\`

See [nitro-opentelemetry documentation](https://github.com/huang-julien/nitro-opentelemetry){rel="nofollow"}


# How does it work

## Server-side

If enabled, nuxt-applicationinisights will load nitro-applicationinsights which also loads nitro-opentelemetry.

This means the nitro server will be running Opentelemetry and [applicationinsights](https://github.com/microsoft/ApplicationInsights-node.js){rel="nofollow"}.

## Client-side

If enabled, nuxt-applicationinsights provides a plugin which initialize the [applicationinsights web sdk](https://www.npmjs.com/package/@microsoft/applicationinsights-web){rel="nofollow"}.

## API

nuxt-applicationinsights provides 2 plugins. One server side and another one client side.

The client plugin provides the ApplicationInsights instance from the web SDK. And the server side one provides the default TelemetryClient that applicationinsights node initialize (it's a singleton !).

Both SDK provides a similar (almost identical) API so it is easier to track any event while being in an universal component. This means you don't have to worry about whether it will work in one environment or not.


# Hooks

| name                               | type                        | Description                                                                |
| ---------------------------------- | --------------------------- | -------------------------------------------------------------------------- |
| `applicationinsights:config:clien` | `(config: Snippet) => void` | Called when before creating the `ApplicationInsights` instance             |
| `applicationinsights:load:error`   | `(e: Error) => void`        | Called if something's wrong with the initialization of ApplicationInsights |

## Nitro hooks

See [nitro-applicationinsights](https://nitro-applicationinsights.julien-huang.dev/){rel="nofollow"} and [nitro-opentelemetry](https://github.com/huang-julien/nitro-opentelemetry){rel="nofollow"}.
